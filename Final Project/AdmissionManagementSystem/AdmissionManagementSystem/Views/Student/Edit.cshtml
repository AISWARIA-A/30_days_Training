@model AdmissionManagementSystem.Models.Student

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/StudentLayout.cshtml";
}

@if (Session["Username"] != null)
{
    <html>
    <head>
        <title>Edit profile</title>
    </head>
    <body>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="container">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group row">
                    <div class="col-md-5">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @placeholder = "", @id = "fname", @onfocusout = "Checkfirstname()" } })
                        <small></small>
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-md-5">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @placeholder = "", @id = "lname", @onfocusout = "Checklastname()" } })
                        <small></small>
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-md-5">
                        @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control", @placeholder = "", @id = "dob", @onfocusout = "Checkdob()" } })
                        <small></small>
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-md-5">
                        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Gender, new List<SelectListItem>
                        {
                            new SelectListItem{ Text = "Male", Value = "Male" },
                            new SelectListItem{ Text = "Female", Value = "Female" },
                        }, "-----Select Gender-----", new { @class = "form-control", @id = "gender", @onfocusout = "Checkgender()" })
                        <small></small>
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-md-5">
                        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", @placeholder = "", @id = "phone", @onfocusout = "Checkphone()" } })
                        <small></small>
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-md-5">
                        @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control", @placeholder = "", @id = "email", @onfocusout = "Checkemail()" } })
                        <small></small>
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-md-5">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @placeholder = "", @id = "email", @onfocusout = "Checkaddress()" } })
                        <small></small>
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-md-5">
                        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control", @placeholder = "", @id = "email", @onfocusout = "Checkstate()" } })
                        <small></small>
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-md-5">
                        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", @placeholder = "", @id = "email", @onfocusout = "Checkcity()" } })
                        <small></small>
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Update" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        }
        <script src="~/Content/JS/StudentSignin.js"></script>

    </body>
</html>
}
else
{
Layout = null;
<p>Session expired</p>
}